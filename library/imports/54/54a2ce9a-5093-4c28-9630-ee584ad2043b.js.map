{"version":3,"sources":["../../../../assets/Script/assets/Script/Light.js"],"names":["GameplayManager","require","Global","Light","cc","Class","extends","Component","properties","sound","default","type","AudioClip","fireImg","Node","start","fire","active","log","scheduleOnce","lose","tap","audioEngine","play","unschedule","increaseScore"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,kBAAkBC,QAAQ,iBAAR,CAAtB;AACA,IAAIC,SAASD,QAAQ,QAAR,CAAb;;AAEA,IAAIE,QAAQC,GAAGC,KAAH,CAAS;AACjBC,WAASF,GAAGG,SADK;;AAGjBC,cAAY;AACXC,WACA;AACCC,eAAS,IADV;AAECC,YAAMP,GAAGQ;AAFV,KAFW;;AAQXC,aACA;AACFH,eAAS,IADP;AAECC,YAAMP,GAAGU;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBH,KATW,EAHK;;AAkCjB;;AAEA;;AAEAC,OAtCiB,mBAsCR;AACX,SAAKC,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACG,GAxCgB;;;AA0CjB;;;;;;AAQAD,MAlDiB,kBAkDT;AACPZ,OAAGc,GAAH,CAAQ,KAAKL,OAAb;AACH,SAAKA,OAAL,CAAaI,MAAb,GAAsB,IAAtB;AACA,SAAKE,YAAL,CAAkB,KAAKC,IAAvB,EAA6B,CAA7B;AACG,GAtDgB;AAwDjBC,KAxDiB,iBAwDV;AACN,QAAI,KAAKR,OAAL,CAAaI,MAAjB,EACA;AACCb,SAAGkB,WAAH,CAAeC,IAAf,CAAqB,KAAKd,KAA1B;AACA,WAAKI,OAAL,CAAaI,MAAb,GAAsB,KAAtB;AACA,WAAKO,UAAL,CAAiB,KAAKJ,IAAtB;AACAlB,aAAOF,eAAP,CAAuByB,aAAvB;AACA,KAND,MAQA;AACC,WAAKL,IAAL;AACA;AAED,GArEgB;AAuEjBA,MAvEiB,kBAuET;AACPlB,WAAOF,eAAP,CAAuBoB,IAAvB,CAA6B,IAA7B;AACA;AAzEgB;;AA2EjB;AA3EQ,CAAZ","file":"Light.js","sourceRoot":"../../../../assets/Script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nvar GameplayManager = require(\"GameplayManager\");\nvar Global = require(\"Global\");\n\nvar Light = cc.Class({\n    extends: cc.Component,\n\t\n    properties: {\n    \tsound: \n    \t{\n    \t\tdefault: null,\n    \t\ttype: cc.AudioClip\n    \t},\n    \t\n    \t\n    \tfireImg:\n    \t{\n\t\t\tdefault: null,\n    \t\ttype: cc.Node\n    \t}\n    \t\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\t\tthis.fire.active = false;\n    },\n    \n    /*trigger () {\n    \tcc.audioEngine.play (this.sound);\n\t\tthis.fireImg.active = true;\n\t\tthis.scheduleOnce(function() {cc.log(\"test\"); this.fire.active = false; }, 0.5);\n\n    },*/\n    \n    \n    fire () {\n    \tcc.log (this.fireImg);\n\t\tthis.fireImg.active = true;\n\t\tthis.scheduleOnce(this.lose, 1);\n    },\n    \n    tap () {\n    \tif (this.fireImg.active)\n    \t{\n    \t\tcc.audioEngine.play (this.sound);\n    \t\tthis.fireImg.active = false;\n    \t\tthis.unschedule (this.lose);\n    \t\tGlobal.GameplayManager.increaseScore ();\n    \t}\n    \telse\n    \t{\n\t    \tthis.lose ();\n    \t}\n\n    },\n    \n    lose () {\n    \tGlobal.GameplayManager.lose (this);\n    },\n\n    // update (dt) {},\n});\n"]}