{"version":3,"sources":["../../../../assets/Script/assets/Script/GameplayManager.js"],"names":["Global","require","DifficultyLevel","cc","Class","name","properties","lengthInPoints","default","type","Integer","probDouble","probTriple","speedMultiplier","probHalfDelay","instance","extends","Component","currentLevel","get","levels","currentLevelIndex","lights","Node","currentScore","currentIndexInLevel","onLoad","GameplayManager","start","scheduleOnce","fireOneRound","increaseScore","log","length","i","chooseNextFireAmount","lightIndex","Math","floor","random","lightNode","light","getComponent","fireImg","active","fire","prepareNextFire","chooseNextFireDelay","delay","lose","unschedule","update","dt"],"mappings":"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","file":"GameplayManager.js","sourceRoot":"../../../../assets/Script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nvar Global = require(\"Global\");\n\nvar DifficultyLevel = cc.Class({\n\tname: \"DifficultyLevel\",\n\tproperties: {\n       lengthInPoints: {\n       \t\tdefault: 0,\n       \t\ttype: cc.Integer,\n       },\n \t   probDouble: 0,\n \t   probTriple: 0,\n \t   speedMultiplier: 1,\n \t   probHalfDelay: 0,\n    },\n});\n\nvar instance = null;\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n         currentLevel: {\n     \t\tget () {\n                 return this.levels[this.currentLevelIndex];\n             },\n         },\n       lights: {\n            default: [],\n            type: [cc.Node],\n       },\n       levels: {\n            default: [],\n            type: [DifficultyLevel],\n       },\n       \n       currentScore: {\n       \t\tdefault: 0,\n       \t\ttype: cc.Integer,\n       },\n       \n       currentLevelIndex: {\n       \t\tdefault: 0,\n       \t\ttype: cc.Integer,\n       },\n       \n       currentIndexInLevel: {\n       \t\tdefault: 0,\n       \t\ttype: cc.Integer,\n       },\n       \n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n     onLoad () {\n     \tGlobal.GameplayManager = this;\n     },\n\n    start () {\n    \tif (instance == null)\n\t\t\tinstance = this;\n     \t\n\t\tthis.scheduleOnce (this.fireOneRound, 1);\n    },\n    \n    increaseScore () {\n    \tthis.currentScore++;\n\t\tcc.log (\"increaseScore: \" + this.currentScore);\n    \tthis.currentIndexInLevel++;\n    \tif (this.currentLevelIndex < this.levels.length - 1 && this.currentIndexInLevel >= this.currentLevel.lengthInPoints)\n    \t{\n    \t\tthis.currentLevelIndex++;\n    \t\tthis.currentIndexInLevel = 0;\n\t\t\tcc.log (\"increaseLevel: \" + this.currentLevelIndex);\n    \t}\n    },\n\n\tfireOneRound () {\n\t\tfor (i = 0 ; i < this.chooseNextFireAmount () ; i++)\n\t\t{\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tvar lightIndex = Math.floor (Math.random() * 9);\n\t\t\t\tvar lightNode = this.lights[lightIndex];\n\t\t\t\tvar light = lightNode.getComponent(\"Light\");\n\t\t\t\tif (!light.fireImg.active)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlight.fire ();\n\t\t}\n\t\tthis.prepareNextFire ();\n\t},\n\t\n\tchooseNextFireAmount () {\n\t\tif (Math.random() <= this.currentLevel.probTriple)\n\t\t\treturn 3;\n\t\telse if (Math.random() <= this.currentLevel.probTriple + this.currentLevel.probDouble)\n\t\t\treturn 2;\n\t\telse\n\t\t\treturn 1;\n\t},\n\t\n\tchooseNextFireDelay () {\n\t\tif (Math.random() <= this.currentLevel.probHalfDelay)\n\t\t\treturn 0.5;\n\t\telse\n\t\t\treturn 1;\n\t},\n\t\n\tprepareNextFire () {\n\t\tvar delay = this.chooseNextFireDelay ();\n\t\tthis.scheduleOnce (this.fireOneRound, delay);\n\t},\n\t\n\tlose () {\n\t\tcc.log (\"Loser\");\n\t\tthis.unschedule (this.fireOneRound);\n\t},\n\t\n     update (dt) {\n     \t\n     \n     },\n});\n"]}